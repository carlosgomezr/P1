/* compiladorTokenManager.java */
/* Generated By:JavaCC: Do not edit this line. compiladorTokenManager.java */

/** Token Manager. */
@SuppressWarnings("unused")public class compiladorTokenManager implements compiladorConstants {

  /** Debug output. */
  public static  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public static  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private static final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0xc000000L) != 0L)
            return 22;
         if ((active0 & 0x14001000000000L) != 0L)
            return 450;
         if ((active0 & 0x3000000L) != 0L)
            return 25;
         return -1;
      default :
         return -1;
   }
}
private static final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
static private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
static private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 13:
         jjmatchedKind = 3;
         return jjMoveStringLiteralDfa1_0(0x10L);
      case 33:
         jjmatchedKind = 34;
         return jjMoveStringLiteralDfa1_0(0x190800000L);
      case 36:
         return jjStopAtPos(0, 14);
      case 38:
         return jjMoveStringLiteralDfa1_0(0x240000000L);
      case 40:
         return jjStopAtPos(0, 56);
      case 41:
         return jjStopAtPos(0, 57);
      case 42:
         return jjStopAtPos(0, 37);
      case 43:
         jjmatchedKind = 35;
         return jjMoveStringLiteralDfa1_0(0xa000000000000L);
      case 44:
         return jjStopAtPos(0, 43);
      case 45:
         jjmatchedKind = 36;
         return jjMoveStringLiteralDfa1_0(0x14000000000000L);
      case 47:
         return jjStopAtPos(0, 38);
      case 58:
         return jjStopAtPos(0, 65);
      case 59:
         return jjStopAtPos(0, 69);
      case 60:
         jjmatchedKind = 24;
         return jjMoveStringLiteralDfa1_0(0x2000000L);
      case 61:
         jjmatchedKind = 44;
         return jjMoveStringLiteralDfa1_0(0x400000L);
      case 62:
         jjmatchedKind = 26;
         return jjMoveStringLiteralDfa1_0(0x8000000L);
      case 63:
         return jjStopAtPos(0, 16);
      case 91:
         return jjStopAtPos(0, 54);
      case 93:
         return jjStopAtPos(0, 55);
      case 94:
         return jjStopAtPos(0, 39);
      case 123:
         return jjStopAtPos(0, 58);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x20000000L);
      case 125:
         return jjStopAtPos(0, 59);
      case 194:
         return jjMoveStringLiteralDfa1_0(0x8000L);
      default :
         return jjMoveNfa_0(3, 0);
   }
}
static private int jjMoveStringLiteralDfa1_0(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 10:
         if ((active0 & 0x10L) != 0L)
            return jjStopAtPos(1, 4);
         break;
      case 38:
         if ((active0 & 0x40000000L) != 0L)
            return jjStopAtPos(1, 30);
         return jjMoveStringLiteralDfa2_0(active0, 0x90000000L);
      case 43:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStopAtPos(1, 49);
         break;
      case 45:
         if ((active0 & 0x4000000000000L) != 0L)
            return jjStopAtPos(1, 50);
         break;
      case 61:
         if ((active0 & 0x400000L) != 0L)
            return jjStopAtPos(1, 22);
         else if ((active0 & 0x800000L) != 0L)
            return jjStopAtPos(1, 23);
         else if ((active0 & 0x2000000L) != 0L)
            return jjStopAtPos(1, 25);
         else if ((active0 & 0x8000000L) != 0L)
            return jjStopAtPos(1, 27);
         else if ((active0 & 0x8000000000000L) != 0L)
            return jjStopAtPos(1, 51);
         else if ((active0 & 0x10000000000000L) != 0L)
            return jjStopAtPos(1, 52);
         break;
      case 124:
         if ((active0 & 0x20000000L) != 0L)
            return jjStopAtPos(1, 29);
         else if ((active0 & 0x200000000L) != 0L)
            return jjStopAtPos(1, 33);
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000L);
      case 191:
         if ((active0 & 0x8000L) != 0L)
            return jjStopAtPos(1, 15);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, 0L);
}
static private int jjMoveStringLiteralDfa2_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 38:
         if ((active0 & 0x80000000L) != 0L)
            return jjStopAtPos(2, 31);
         break;
      case 124:
         if ((active0 & 0x100000000L) != 0L)
            return jjStopAtPos(2, 32);
         break;
      case 194:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, 0L);
}
static private int jjMoveStringLiteralDfa3_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 161:
         if ((active0 & 0x10000000L) != 0L)
            return jjStopAtPos(3, 28);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
static private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 450;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 6)
                        kind = 6;
                     { jjCheckNAddStates(0, 2); }
                  }
                  else if (curChar == 45)
                     { jjCheckNAddTwoStates(113, 114); }
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 25;
                  else if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 22;
                  else if (curChar == 34)
                     { jjCheckNAddTwoStates(13, 15); }
                  else if (curChar == 39)
                     { jjAddStates(3, 4); }
                  break;
               case 450:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(114, 115); }
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 6)
                        kind = 6;
                     { jjCheckNAdd(113); }
                  }
                  break;
               case 4:
                  if (curChar == 39)
                     { jjAddStates(3, 4); }
                  break;
               case 5:
                  if ((0xffffff7fffffffffL & l) != 0L)
                     { jjCheckNAdd(6); }
                  break;
               case 6:
                  if (curChar == 39 && kind > 9)
                     kind = 9;
                  break;
               case 10:
                  if (curChar == 39)
                     { jjCheckNAdd(6); }
                  break;
               case 12:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(13, 15); }
                  break;
               case 13:
                  if ((0xfffffff3ffffffffL & l) != 0L)
                     { jjCheckNAddStates(5, 7); }
                  break;
               case 14:
                  if (curChar == 34 && kind > 10)
                     kind = 10;
                  break;
               case 15:
                  if (curChar == 35)
                     { jjAddStates(8, 11); }
                  break;
               case 18:
                  if (curChar == 34)
                     { jjCheckNAddStates(5, 7); }
                  break;
               case 19:
                  if (curChar == 35)
                     { jjCheckNAddStates(5, 7); }
                  break;
               case 21:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 22:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 23:
                  if ((0xfffffffffffffbffL & l) != 0L && kind > 12)
                     kind = 12;
                  break;
               case 24:
                  if (curChar == 62)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 25:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 26:
                  if ((0xffffdfffffffffffL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 27:
                  if (curChar == 62 && kind > 13)
                     kind = 13;
                  break;
               case 28:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 112:
                  if (curChar == 45)
                     { jjCheckNAddTwoStates(113, 114); }
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  { jjCheckNAdd(113); }
                  break;
               case 114:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(114, 115); }
                  break;
               case 115:
                  if (curChar == 46)
                     { jjCheckNAdd(116); }
                  break;
               case 116:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 7)
                     kind = 7;
                  { jjCheckNAdd(116); }
                  break;
               case 117:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 6)
                     kind = 6;
                  { jjCheckNAddStates(0, 2); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 3:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 11)
                        kind = 11;
                     { jjCheckNAdd(21); }
                  }
                  if (curChar == 115)
                     { jjCheckNAddStates(12, 15); }
                  else if (curChar == 83)
                     { jjCheckNAddStates(16, 19); }
                  else if (curChar == 97)
                     { jjAddStates(20, 21); }
                  else if (curChar == 65)
                     { jjAddStates(22, 23); }
                  else if (curChar == 86)
                     { jjAddStates(24, 25); }
                  else if (curChar == 112)
                     { jjAddStates(26, 35); }
                  else if (curChar == 80)
                     { jjAddStates(36, 45); }
                  else if (curChar == 99)
                     { jjAddStates(46, 51); }
                  else if (curChar == 67)
                     { jjAddStates(52, 57); }
                  else if (curChar == 100)
                     { jjAddStates(58, 60); }
                  else if (curChar == 68)
                     { jjAddStates(61, 63); }
                  else if (curChar == 101)
                     { jjAddStates(64, 65); }
                  else if (curChar == 69)
                     { jjAddStates(66, 67); }
                  else if (curChar == 118)
                     { jjAddStates(68, 70); }
                  else if (curChar == 102)
                     { jjAddStates(71, 72); }
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 102;
                  else if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 96;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 89;
                  else if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 83;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 76;
                  else if (curChar == 72)
                     jjstateSet[jjnewStateCnt++] = 72;
                  else if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 67;
                  else if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 60;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 52;
                  else if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 47;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 41;
                  else if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 35;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 0:
                  if (curChar == 101 && kind > 8)
                     kind = 8;
                  break;
               case 1:
                  if (curChar == 117)
                     { jjCheckNAdd(0); }
                  break;
               case 2:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 5:
                  if ((0xffffffffbfffffffL & l) != 0L)
                     { jjCheckNAdd(6); }
                  break;
               case 7:
                  if (curChar == 94)
                     { jjAddStates(73, 76); }
                  break;
               case 8:
                  if (curChar == 116)
                     { jjCheckNAdd(6); }
                  break;
               case 9:
                  if (curChar == 114)
                     { jjCheckNAdd(6); }
                  break;
               case 11:
                  if (curChar == 94)
                     { jjCheckNAdd(6); }
                  break;
               case 13:
                  { jjCheckNAddStates(5, 7); }
                  break;
               case 16:
                  if (curChar == 116)
                     { jjCheckNAddStates(5, 7); }
                  break;
               case 17:
                  if (curChar == 114)
                     { jjCheckNAddStates(5, 7); }
                  break;
               case 20:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  { jjCheckNAdd(21); }
                  break;
               case 21:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 11)
                     kind = 11;
                  { jjCheckNAdd(21); }
                  break;
               case 23:
                  if (kind > 12)
                     kind = 12;
                  break;
               case 26:
                  jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 30:
                  if (curChar == 110 && kind > 20)
                     kind = 20;
                  break;
               case 31:
               case 37:
                  if (curChar == 97)
                     { jjCheckNAdd(30); }
                  break;
               case 32:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 34:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 33;
                  break;
               case 35:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 38:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if (curChar == 111 && kind > 40)
                     kind = 40;
                  break;
               case 44:
               case 49:
                  if (curChar == 122)
                     { jjCheckNAdd(43); }
                  break;
               case 45:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 50:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 115 && kind > 70)
                     kind = 70;
                  break;
               case 55:
               case 62:
                  if (curChar == 97)
                     { jjCheckNAdd(54); }
                  break;
               case 56:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 59:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 58;
                  break;
               case 60:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 77)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 63:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 69:
                  if (curChar == 114 && kind > 71)
                     kind = 71;
                  break;
               case 70:
               case 74:
                  if (curChar == 101)
                     { jjCheckNAdd(69); }
                  break;
               case 71:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 72)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 75:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 78:
                  if (curChar == 114 && kind > 77)
                     kind = 77;
                  break;
               case 79:
               case 85:
                  if (curChar == 97)
                     { jjCheckNAdd(78); }
                  break;
               case 80:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 79;
                  break;
               case 81:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 82:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 83;
                  break;
               case 86:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 86;
                  break;
               case 88:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 89;
                  break;
               case 91:
                  if (curChar == 115 && kind > 82)
                     kind = 82;
                  break;
               case 92:
               case 98:
                  if (curChar == 101)
                     { jjCheckNAdd(91); }
                  break;
               case 93:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 99:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 102)
                     { jjAddStates(71, 72); }
                  break;
               case 105:
                  if (curChar == 111 && kind > 8)
                     kind = 8;
                  break;
               case 106:
                  if (curChar == 115)
                     { jjCheckNAdd(105); }
                  break;
               case 107:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 115)
                     { jjCheckNAdd(0); }
                  break;
               case 110:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 118:
                  if (curChar == 118)
                     { jjAddStates(68, 70); }
                  break;
               case 119:
                  if (curChar == 114)
                     { jjCheckNAdd(105); }
                  break;
               case 120:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 114 && kind > 48)
                     kind = 48;
                  break;
               case 127:
               case 386:
                  if (curChar == 97)
                     { jjCheckNAdd(126); }
                  break;
               case 128:
                  if (curChar == 114 && kind > 64)
                     kind = 64;
                  break;
               case 129:
               case 387:
                  if (curChar == 111)
                     { jjCheckNAdd(128); }
                  break;
               case 130:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 69)
                     { jjAddStates(66, 67); }
                  break;
               case 133:
                  if (curChar == 111 && kind > 17)
                     kind = 17;
                  break;
               case 134:
               case 146:
                  if (curChar == 114)
                     { jjCheckNAdd(133); }
                  break;
               case 135:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 101 && kind > 41)
                     kind = 41;
                  break;
               case 139:
               case 150:
                  if (curChar == 100)
                     { jjCheckNAdd(138); }
                  break;
               case 140:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if (curChar == 101)
                     { jjAddStates(64, 65); }
                  break;
               case 147:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 151:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 68)
                     { jjAddStates(61, 63); }
                  break;
               case 157:
                  if (curChar == 101 && kind > 18)
                     kind = 18;
                  break;
               case 158:
               case 178:
                  if (curChar == 108)
                     { jjCheckNAdd(157); }
                  break;
               case 159:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if (curChar == 111 && kind > 67)
                     kind = 67;
                  break;
               case 162:
               case 181:
                  if (curChar == 116)
                     { jjCheckNAdd(161); }
                  break;
               case 163:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 101 && kind > 80)
                     kind = 80;
                  break;
               case 168:
               case 186:
                  if (curChar == 116)
                     { jjCheckNAdd(167); }
                  break;
               case 169:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 172:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 100)
                     { jjAddStates(58, 60); }
                  break;
               case 179:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 182:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 187:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 189;
                  break;
               case 191:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if (curChar == 67)
                     { jjAddStates(52, 57); }
                  break;
               case 196:
                  if (curChar == 114 && kind > 19)
                     kind = 19;
                  break;
               case 197:
               case 236:
                  if (curChar == 101)
                     { jjCheckNAdd(196); }
                  break;
               case 198:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 199:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 200:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 202:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 203:
                  if (curChar == 97 && kind > 21)
                     kind = 21;
                  break;
               case 204:
               case 242:
                  if (curChar == 110)
                     { jjCheckNAdd(203); }
                  break;
               case 205:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if (curChar == 114 && kind > 42)
                     kind = 42;
                  break;
               case 209:
               case 246:
                  if (curChar == 97)
                     { jjCheckNAdd(208); }
                  break;
               case 210:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 114 && kind > 62)
                     kind = 62;
                  break;
               case 217:
               case 253:
                  if (curChar == 97)
                     { jjCheckNAdd(216); }
                  break;
               case 218:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if (curChar == 111 && kind > 63)
                     kind = 63;
                  break;
               case 225:
               case 260:
                  if (curChar == 115)
                     { jjCheckNAdd(224); }
                  break;
               case 226:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if (curChar == 114 && kind > 72)
                     kind = 72;
                  break;
               case 228:
               case 262:
                  if (curChar == 97)
                     { jjCheckNAdd(227); }
                  break;
               case 229:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 233:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 234:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 233;
                  break;
               case 235:
                  if (curChar == 99)
                     { jjAddStates(46, 51); }
                  break;
               case 237:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 243:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 247:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 254:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 261:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 263:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 265:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if (curChar == 80)
                     { jjAddStates(36, 45); }
                  break;
               case 270:
                  if (curChar == 111 && kind > 45)
                     kind = 45;
                  break;
               case 271:
               case 333:
                  if (curChar == 99)
                     { jjCheckNAdd(270); }
                  break;
               case 272:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if (curChar == 111 && kind > 46)
                     kind = 46;
                  break;
               case 277:
               case 338:
                  if (curChar == 100)
                     { jjCheckNAdd(276); }
                  break;
               case 278:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if (curChar == 111 && kind > 47)
                     kind = 47;
                  break;
               case 283:
               case 343:
                  if (curChar == 100)
                     { jjCheckNAdd(282); }
                  break;
               case 284:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 287:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 286;
                  break;
               case 288:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 289:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 290:
                  if (curChar == 97 && kind > 68)
                     kind = 68;
                  break;
               case 291:
               case 350:
                  if (curChar == 114)
                     { jjCheckNAdd(290); }
                  break;
               case 292:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if (curChar == 80 && kind > 73)
                     kind = 73;
                  break;
               case 294:
               case 352:
                  if (curChar == 95)
                     { jjCheckNAdd(293); }
                  break;
               case 295:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if (curChar == 82 && kind > 74)
                     kind = 74;
                  break;
               case 301:
               case 358:
                  if (curChar == 79)
                     { jjCheckNAdd(300); }
                  break;
               case 302:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 303:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 303;
                  break;
               case 305:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 307:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 306;
                  break;
               case 308:
                  if (curChar == 83 && kind > 75)
                     kind = 75;
                  break;
               case 309:
               case 365:
                  if (curChar == 95)
                     { jjCheckNAdd(308); }
                  break;
               case 310:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 311:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if (curChar == 108 && kind > 76)
                     kind = 76;
                  break;
               case 316:
               case 371:
                  if (curChar == 97)
                     { jjCheckNAdd(315); }
                  break;
               case 317:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 319:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 320:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 321:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if (curChar == 115 && kind > 81)
                     kind = 81;
                  break;
               case 324:
               case 378:
                  if (curChar == 101)
                     { jjCheckNAdd(323); }
                  break;
               case 325:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 324;
                  break;
               case 326:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 327:
                  if (curChar == 115 && kind > 83)
                     kind = 83;
                  break;
               case 328:
               case 381:
                  if (curChar == 111)
                     { jjCheckNAdd(327); }
                  break;
               case 329:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 330:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 329;
                  break;
               case 331:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 112)
                     { jjAddStates(26, 35); }
                  break;
               case 334:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 334;
                  break;
               case 336:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 336;
                  break;
               case 339:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 340:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 340;
                  break;
               case 342:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 344:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 345:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 344;
                  break;
               case 346:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 347:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 348:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 349:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 351:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 353:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 354:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 355:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 354;
                  break;
               case 356:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 357:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 359:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 360:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 361:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 360;
                  break;
               case 362:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 363:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 364:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 366:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 365;
                  break;
               case 367:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 366;
                  break;
               case 368:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 369:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 370:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 372:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 371;
                  break;
               case 373:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 372;
                  break;
               case 374:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 375:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 376:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 377:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 379:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 378;
                  break;
               case 380:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 382:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 381;
                  break;
               case 383:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 382;
                  break;
               case 384:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 383;
                  break;
               case 385:
                  if (curChar == 86)
                     { jjAddStates(24, 25); }
                  break;
               case 388:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 387;
                  break;
               case 389:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 390:
                  if (curChar == 65)
                     { jjAddStates(22, 23); }
                  break;
               case 391:
                  if (curChar == 111 && kind > 53)
                     kind = 53;
                  break;
               case 392:
               case 407:
                  if (curChar == 108)
                     { jjCheckNAdd(391); }
                  break;
               case 393:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 392;
                  break;
               case 394:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if (curChar == 101 && kind > 79)
                     kind = 79;
                  break;
               case 398:
               case 412:
                  if (curChar == 116)
                     { jjCheckNAdd(397); }
                  break;
               case 399:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 400:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 401:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 400;
                  break;
               case 402:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 406:
                  if (curChar == 97)
                     { jjAddStates(20, 21); }
                  break;
               case 408:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 407;
                  break;
               case 409:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 410:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 411:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 413:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 414:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 415:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 414;
                  break;
               case 416:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 417:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 416;
                  break;
               case 418:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 417;
                  break;
               case 419:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 420:
                  if (curChar == 83)
                     { jjCheckNAddStates(16, 19); }
                  break;
               case 421:
                  if (curChar == 105 && kind > 60)
                     kind = 60;
                  break;
               case 422:
                  if (curChar == 111 && kind > 61)
                     kind = 61;
                  break;
               case 423:
               case 438:
                  if (curChar == 110)
                     { jjCheckNAdd(422); }
                  break;
               case 424:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 425:
                  if (curChar == 114 && kind > 66)
                     kind = 66;
                  break;
               case 426:
               case 440:
                  if (curChar == 105)
                     { jjCheckNAdd(425); }
                  break;
               case 427:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 428:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 427;
                  break;
               case 429:
                  if (curChar == 114 && kind > 78)
                     kind = 78;
                  break;
               case 430:
               case 443:
                  if (curChar == 97)
                     { jjCheckNAdd(429); }
                  break;
               case 431:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 432:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 431;
                  break;
               case 433:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 433;
                  break;
               case 435:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 436:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 437:
                  if (curChar == 115)
                     { jjCheckNAddStates(12, 15); }
                  break;
               case 439:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 441:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 440;
                  break;
               case 442:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 441;
                  break;
               case 444:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 443;
                  break;
               case 445:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 444;
                  break;
               case 446:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 447:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 448:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 449:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 448;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 5:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 13:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(5, 7); }
                  break;
               case 23:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 12)
                     kind = 12;
                  break;
               case 26:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 450 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   113, 114, 115, 5, 7, 13, 14, 15, 16, 17, 18, 19, 421, 439, 442, 449, 
   421, 424, 428, 436, 411, 419, 396, 405, 386, 389, 337, 342, 349, 351, 357, 364, 
   370, 377, 380, 384, 275, 281, 289, 292, 299, 307, 314, 322, 326, 331, 241, 245, 
   252, 259, 261, 268, 202, 207, 215, 223, 226, 234, 180, 185, 194, 160, 166, 176, 
   149, 155, 137, 144, 125, 127, 131, 108, 111, 8, 9, 10, 11, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, "\44", "\302\277", "\77", null, null, null, null, null, "\75\75", "\41\75", 
"\74", "\74\75", "\76", "\76\75", "\41\46\302\241", "\174\174", "\46\46", 
"\41\46\46", "\41\174\174", "\46\174", "\41", "\53", "\55", "\52", "\57", "\136", null, 
null, null, "\54", "\75", null, null, null, null, "\53\53", "\55\55", "\53\75", 
"\55\75", null, "\133", "\135", "\50", "\51", "\173", "\175", null, null, null, null, 
null, "\72", null, null, null, "\73", null, null, null, null, null, null, null, null, 
null, null, null, null, null, null, };
static protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

static int curLexState = 0;
static int defaultLexState = 0;
static int jjnewStateCnt;
static int jjround;
static int jjmatchedPos;
static int jjmatchedKind;

/** Get the next Token. */
public static Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100000600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         TokenLexicalActions(matchedToken);
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

static void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 6 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         System.out.print("entero "+image+"\u005cr\u005cn");
         break;
      case 7 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                              System.out.print("doble "+image+"\u005cr\u005cn");
         break;
      case 8 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                           System.out.print("boolean "+image+"\u005cr\u005cn");
         break;
      case 9 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                 System.out.print("caracter "+image+"\u005cr\u005cn");
         break;
      case 10 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                    System.out.print("cadena "+image+"\u005cr\u005cn");
         break;
      case 11 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                     System.out.print("id -> "+image+"\u005cr\u005cn");
         break;
      case 12 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       System.out.print("comentario "+image+"\u005cr\u005cn");
         break;
      case 13 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                               System.out.print("comentarioall "+image+"\u005cr\u005cn");
         break;
      case 14 :
        image.append(jjstrLiteralImages[14]);
        lengthOfMatch = jjstrLiteralImages[14].length();
                         System.out.print("dolar-> "+image+"\u005cr\u005cn");
         break;
      case 15 :
        image.append(jjstrLiteralImages[15]);
        lengthOfMatch = jjstrLiteralImages[15].length();
                             System.out.print("sigabrir-> "+image+"\u005cr\u005cn");
         break;
      case 16 :
        image.append(jjstrLiteralImages[16]);
        lengthOfMatch = jjstrLiteralImages[16].length();
                             System.out.print("sigcerrar-> "+image+"\u005cr\u005cn");
         break;
      case 17 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                        System.out.print("tentero "+image+"\u005cr\u005cn");
         break;
      case 18 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                     System.out.print("tdoble "+image+"\u005cr\u005cn");
         break;
      case 19 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                              System.out.print("tcaracter "+image+"\u005cr\u005cn");
         break;
      case 20 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                           System.out.print("tboolean "+image+"\u005cr\u005cn");
         break;
      case 21 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                        System.out.print("tcadena "+image+"\u005cr\u005cn");
         break;
      case 22 :
        image.append(jjstrLiteralImages[22]);
        lengthOfMatch = jjstrLiteralImages[22].length();
                              System.out.print("igualacion "+image+"\u005cr\u005cn");
         break;
      case 23 :
        image.append(jjstrLiteralImages[23]);
        lengthOfMatch = jjstrLiteralImages[23].length();
                                  System.out.print("diferenciacion "+image+"\u005cr\u005cn");
         break;
      case 24 :
        image.append(jjstrLiteralImages[24]);
        lengthOfMatch = jjstrLiteralImages[24].length();
                           System.out.print("menorque "+image+"\u005cr\u005cn");
         break;
      case 25 :
        image.append(jjstrLiteralImages[25]);
        lengthOfMatch = jjstrLiteralImages[25].length();
                                 System.out.print("menorigualque "+image+"\u005cr\u005cn");
         break;
      case 26 :
        image.append(jjstrLiteralImages[26]);
        lengthOfMatch = jjstrLiteralImages[26].length();
                           System.out.print("mayorque "+image+"\u005cr\u005cn");
         break;
      case 27 :
        image.append(jjstrLiteralImages[27]);
        lengthOfMatch = jjstrLiteralImages[27].length();
                                 System.out.print("mayorigualque "+image+"\u005cr\u005cn");
         break;
      case 28 :
        image.append(jjstrLiteralImages[28]);
        lengthOfMatch = jjstrLiteralImages[28].length();
                          System.out.print("nulo "+image+"\u005cr\u005cn");
         break;
      case 29 :
        image.append(jjstrLiteralImages[29]);
        lengthOfMatch = jjstrLiteralImages[29].length();
                     System.out.print("or "+image+"\u005cr\u005cn");
         break;
      case 30 :
        image.append(jjstrLiteralImages[30]);
        lengthOfMatch = jjstrLiteralImages[30].length();
                      System.out.print("and "+image+"\u005cr\u005cn");
         break;
      case 31 :
        image.append(jjstrLiteralImages[31]);
        lengthOfMatch = jjstrLiteralImages[31].length();
                        System.out.print("nand "+image+"\u005cr\u005cn");
         break;
      case 32 :
        image.append(jjstrLiteralImages[32]);
        lengthOfMatch = jjstrLiteralImages[32].length();
                       System.out.print("nor "+image+"\u005cr\u005cn");
         break;
      case 33 :
        image.append(jjstrLiteralImages[33]);
        lengthOfMatch = jjstrLiteralImages[33].length();
                      System.out.print("xor "+image+"\u005cr\u005cn");
         break;
      case 34 :
        image.append(jjstrLiteralImages[34]);
        lengthOfMatch = jjstrLiteralImages[34].length();
                     System.out.print("not "+image+"\u005cr\u005cn");
         break;
      case 35 :
        image.append(jjstrLiteralImages[35]);
        lengthOfMatch = jjstrLiteralImages[35].length();
                     System.out.print("suma "+image+"\u005cr\u005cn");
         break;
      case 36 :
        image.append(jjstrLiteralImages[36]);
        lengthOfMatch = jjstrLiteralImages[36].length();
                       System.out.print("resta "+image+"\u005cr\u005cn");
         break;
      case 37 :
        image.append(jjstrLiteralImages[37]);
        lengthOfMatch = jjstrLiteralImages[37].length();
                     System.out.print("multi "+image+"\u005cr\u005cn");
         break;
      case 38 :
        image.append(jjstrLiteralImages[38]);
        lengthOfMatch = jjstrLiteralImages[38].length();
                     System.out.print("div "+image+"\u005cr\u005cn");
         break;
      case 39 :
        image.append(jjstrLiteralImages[39]);
        lengthOfMatch = jjstrLiteralImages[39].length();
                          System.out.print("^"+image+"\u005cr\u005cn");
         break;
      case 40 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                      System.out.print("lienzo "+image+"\u005cr\u005cn");
         break;
      case 41 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                            System.out.print("extiende "+image+"\u005cr\u005cn");
         break;
      case 42 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                               System.out.print("conservar "+image+"\u005cr\u005cn");
         break;
      case 43 :
        image.append(jjstrLiteralImages[43]);
        lengthOfMatch = jjstrLiteralImages[43].length();
                      System.out.print("coma "+image+"\u005cr\u005cn");
         break;
      case 44 :
        image.append(jjstrLiteralImages[44]);
        lengthOfMatch = jjstrLiteralImages[44].length();
                       System.out.print("igual "+image+"\u005cr\u005cn");
         break;
      case 45 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         System.out.print("publico "+image+"\u005cr\u005cn");
         break;
      case 46 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         System.out.print("privado "+image+"\u005cr\u005cn");
         break;
      case 47 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                               System.out.print("protegido "+image+"\u005cr\u005cn");
         break;
      case 48 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                             System.out.print("var "+image+"\u005cr\u005cn");
         break;
      case 49 :
        image.append(jjstrLiteralImages[49]);
        lengthOfMatch = jjstrLiteralImages[49].length();
                          System.out.print("aumento "+image+"\u005cr\u005cn");
         break;
      case 50 :
        image.append(jjstrLiteralImages[50]);
        lengthOfMatch = jjstrLiteralImages[50].length();
                             System.out.print("decremento "+image+"\u005cr\u005cn");
         break;
      case 51 :
        image.append(jjstrLiteralImages[51]);
        lengthOfMatch = jjstrLiteralImages[51].length();
                          System.out.print("sumasim "+image+"\u005cr\u005cn");
         break;
      case 52 :
        image.append(jjstrLiteralImages[52]);
        lengthOfMatch = jjstrLiteralImages[52].length();
                           System.out.print("restasim "+image+"\u005cr\u005cn");
         break;
      case 53 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         System.out.print("arreglo "+image+"\u005cr\u005cn");
         break;
      case 54 :
        image.append(jjstrLiteralImages[54]);
        lengthOfMatch = jjstrLiteralImages[54].length();
                           System.out.print("corchetei "+image+"\u005cr\u005cn");
         break;
      case 55 :
        image.append(jjstrLiteralImages[55]);
        lengthOfMatch = jjstrLiteralImages[55].length();
                           System.out.print("corcheted "+image+"\u005cr\u005cn");
         break;
      case 56 :
        image.append(jjstrLiteralImages[56]);
        lengthOfMatch = jjstrLiteralImages[56].length();
                         System.out.print("parenti "+image+"\u005cr\u005cn");
         break;
      case 57 :
        image.append(jjstrLiteralImages[57]);
        lengthOfMatch = jjstrLiteralImages[57].length();
                         System.out.print("parentd "+image+"\u005cr\u005cn");
         break;
      case 58 :
        image.append(jjstrLiteralImages[58]);
        lengthOfMatch = jjstrLiteralImages[58].length();
                        System.out.print("llavei "+image+"\u005cr\u005cn");
         break;
      case 59 :
        image.append(jjstrLiteralImages[59]);
        lengthOfMatch = jjstrLiteralImages[59].length();
                        System.out.print("llaved "+image+"\u005cr\u005cn");
         break;
      case 60 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                          System.out.print("si "+image+"\u005cr\u005cn");
         break;
      case 61 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                System.out.print("sino "+image+"\u005cr\u005cn");
         break;
      case 62 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                               System.out.print("comprobar "+image+"\u005cr\u005cn");
         break;
      case 63 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                System.out.print("caso "+image+"\u005cr\u005cn");
         break;
      case 64 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   System.out.print("valor "+image+"\u005cr\u005cn");
         break;
      case 65 :
        image.append(jjstrLiteralImages[65]);
        lengthOfMatch = jjstrLiteralImages[65].length();
                           System.out.print("dospuntos "+image+"\u005cr\u005cn");
         break;
      case 66 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   System.out.print("salir "+image+"\u005cr\u005cn");
         break;
      case 67 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         System.out.print("defecto "+image+"\u005cr\u005cn");
         break;
      case 68 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                System.out.print("para "+image+"\u005cr\u005cn");
         break;
      case 69 :
        image.append(jjstrLiteralImages[69]);
        lengthOfMatch = jjstrLiteralImages[69].length();
                            System.out.print("puntoycoma "+image+"\u005cr\u005cn");
         break;
      case 70 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                            System.out.print("mientras "+image+"\u005cr\u005cn");
         break;
      case 71 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   System.out.print("hacer "+image+"\u005cr\u005cn");
         break;
      case 72 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                               System.out.print("continuar "+image+"\u005cr\u005cn");
         break;
      case 73 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                           System.out.print("pintar_P "+image+"\u005cr\u005cn");
         break;
      case 74 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                              System.out.print("pintar_OR "+image+"\u005cr\u005cn");
         break;
      case 75 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                           System.out.print("pintar_S "+image+"\u005cr\u005cn");
         break;
      case 76 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                               System.out.print("principal "+image+"\u005cr\u005cn");
         break;
      case 77 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         System.out.print("ordenar "+image+"\u005cr\u005cn");
         break;
      case 78 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                               System.out.print("sumarizar "+image+"\u005cr\u005cn");
         break;
      case 79 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                  System.out.print("ascendente "+image+"\u005cr\u005cn");
         break;
      case 80 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                     System.out.print("descendente "+image+"\u005cr\u005cn");
         break;
      case 81 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   System.out.print("pares "+image+"\u005cr\u005cn");
         break;
      case 82 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         System.out.print("impares "+image+"\u005cr\u005cn");
         break;
      case 83 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                      System.out.print("primos "+image+"\u005cr\u005cn");
         break;
      default :
         break;
   }
}
static private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
static private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
static private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

static private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public compiladorTokenManager(SimpleCharStream stream){

      if (input_stream != null)
        throw new TokenMgrError("ERROR: Second call to constructor of static lexer. You must use ReInit() to initialize the static variables.", TokenMgrError.STATIC_LEXER_ERROR);

    input_stream = stream;
  }

  /** Constructor. */
  public compiladorTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  static public void ReInit(SimpleCharStream stream)
  {
    jjmatchedPos = jjnewStateCnt = 0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  static private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 450; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  static public void ReInit(SimpleCharStream stream, int lexState)
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  static public void SwitchTo(int lexState)
  {
    if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xffffffffffffffc1L, 0xfffffL, 
};
static final long[] jjtoSkip = {
   0x3eL, 0x0L, 
};
    static protected SimpleCharStream  input_stream;

    static private final int[] jjrounds = new int[450];
    static private final int[] jjstateSet = new int[2 * 450];

    private static final StringBuilder jjimage = new StringBuilder();
    private static StringBuilder image = jjimage;
    private static int jjimageLen;
    private static int lengthOfMatch;
    
    static protected char curChar;
}
